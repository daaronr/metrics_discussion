ggtitle("Standardized mean difference", subtitle = "Posterior density plot"")
)
"
# Plot for SMD
(
smd_density  <- ggplot(aes(x = smd), data = post.samples) +
geom_density(fill = "lightblue", color = "lightblue", alpha = 0.7) +
geom_point(y = 0, x = mean(post.samples$smd)) +
labs(x = expression(italic(SMD)),
y = element_blank()) +
theme_minimal() +
ggtitle("Standardized mean difference", subtitle = "Posterior density plot")
)
# Plot for tau
ggplot(aes(x = tau), data = post.samples) +
geom_density(fill = "lightgreen", color = "lightgreen", alpha = 0.7) +
geom_point(y = 0, x = mean(post.samples$tau)) +
labs(x = expression(tau),
y = element_blank()) +
theme_minimal() +
ggtitle("Between-study variation (SD = $\tau$)", subtitle = "Posterior density plot")
# Plot for SMD
(
smd_density  <- ggplot(aes(x = smd), data = post.samples) +
geom_density(fill = "lightblue", color = "lightblue", alpha = 0.7) +
geom_point(y = 0, x = mean(post.samples$smd)) +
labs(x = expression(italic(SMD)),
y = element_blank()) +
theme_minimal() +
ggtitle("Standardized mean difference", subtitle = "Posterior density plot")
)
smd_density  <- ggplot(aes(x = smd), data = post.samples) +
geom_density(fill = "lightblue", color = "lightblue", alpha = 0.7) +
geom_point(y = 0, x = mean(post.samples$smd)) +
labs(x = expression(italic(SMD)),
y = element_blank()) +
theme_minimal() +
ggtitle("Standardized mean difference", subtitle = "Posterior density plot")
# Plot for tau
tau_density <- ggplot(aes(x = tau), data = post.samples) +
geom_density(fill = "lightgreen", color = "lightgreen", alpha = 0.7) +
geom_point(y = 0, x = mean(post.samples$tau)) +
labs(x = expression(tau),
y = element_blank()) +
theme_minimal() +
ggtitle("Between-study variation (SD = $\tau$)", subtitle = "Posterior density plot")
require(gridExtra)
grid.arrange(smd_density, tau_density, ncol=2)
# Plot for tau
tau_density <- ggplot(aes(x = tau), data = post.samples) +
geom_density(fill = "lightgreen", color = "lightgreen", alpha = 0.7) +
geom_point(y = 0, x = mean(post.samples$tau)) +
labs(x = expression(tau),
y = element_blank()) +
theme_minimal() +
ggtitle("Between-study variation (SD = tau)", subtitle = "Posterior density plot")
grid.arrange(smd_density, tau_density, ncol=2)
smd.ecdf = ecdf(post.samples$smd)
smd.ecdf <- ecdf(post.samples$smd)
smd.ecdf
smd
JJsmd.ecdf
smd.ecdf
smd.ecdf %>% str()
post.samples
p
ecdf.dat <- data.frame(smd = 1:1000/1000, p = smd.ecdf(1:1000/1000))
ecdf.dat
ecdf
ecdf(2)
smd = 1:1000/1000
smd
smd.ecdf(1:10/10)
smd.ecdf %>% str()
smd.ecdf(1:1000/1000) %>% str()
ggplot(aes(x = smd, y = p), data = ecdf.dat) +
geom_vline(xintercept = mean(post.samples$smd), color = "grey") +
geom_line(size = 2, color = "darkblue") +
theme_minimal() +
labs(x = "SMD", y = "Cumulative Probability") +
ggtitle("ECDF: Posterior Distribution of the Pooled Effect Size")
smd.ecdf(0.3)
smd.ecdf(0.300)
smd.ecdf <- ecdf(post.samples$smd)
smd.ecdf(0.3)
smd.ecdf <- ecdf(post.samples$smd) #cumulative distribution computed on the posterior samples/ simulations of the SMD
ecdf.dat <- data.frame(smd = 1:1000/1000, p = smd.ecdf(1:1000/1000)) #makes a data frame from a 0-1 counter in .001 units, and of the increments of the aforementioned cdf (I guess)
ggplot(aes(x = smd, y = p), data = ecdf.dat) +
geom_vline(xintercept = mean(post.samples$smd), color = "grey") +
geom_line(size = 2, color = "darkblue") +
theme_minimal() +
labs(x = "SMD", y = "Cumulative Probability") +
ggtitle("ECDF: Posterior Distribution of the Pooled Effect Size")
library(pacman)
pload(tidyverse, meta)
library(pacman)
p_load(tidyverse, meta)
p_load(tidyverse, meta, brms, dmetar, extraDistr, ggplot2, tidybayes, dplyr, ggplot2, ggridges, glue, stringr, forcats)
study.draws <- spread_draws(m.brm, r_Author[Author,], b_Intercept) %>%
mutate(b_Intercept = r_Author + b_Intercept)
study.draws
pooled.effect.draws <- spread_draws(m.brm, b_Intercept) %>%
mutate(Author = "Pooled Effect")
pooled.effect.draws
forest.data <- bind_rows(study.draws, pooled.effect.draws) %>%
ungroup() %>%
mutate(Author = str_replace_all(Author, "[.]", " ")) %>%
mutate(Author = reorder(Author, b_Intercept))
mean_qi
?mean_qi
forest.data.summary <- group_by(forest.data, Author) %>%
mean_qi(b_Intercept)
ggplot(aes(b_Intercept, relevel(Author, "Pooled Effect", after = Inf)),
data = forest.data) +
geom_vline(xintercept = fixef(m.brm)[1, 1], color = "grey", size = 1) +
geom_vline(xintercept = fixef(m.brm)[1, 3:4], color = "grey", linetype = 2) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_density_ridges(fill = "blue", rel_min_height = 0.01, col = NA, scale = 1,
alpha = 0.8) +
geom_pointintervalh(data = forest.data.summary, size = 1) +
geom_text(data = mutate_if(forest.data.summary, is.numeric, round, 2),
aes(label = glue("{b_Intercept} [{.lower}, {.upper}]"), x = Inf), hjust = "inward") +
labs(x = "Standardized Mean Difference",
y = element_blank()) +
theme_minimal()
#devtools::install_github("MathiasHarrer/dmetar")
#...I did not 'update new packages'
#install.packages("extraDistr")
library(pacman)
p_load(tidyverse, meta, brms, dmetar, extraDistr, ggplot2, tidybayes, dplyr, ggplot2, ggridges, glue, stringr, forcats)
phcauchy
library(png)
library(grid)
img <- readPNG(here("images", "half_cauchy.png"))
?phcauchy
?prior
prior
library(meta)
p_load(tidyverse, meta, brms, dmetar, extraDistr, ggplot2, tidybayes, dplyr, ggplot2, ggridges, glue, stringr, forcats, meta)
library(pacman)
p_load(tidyverse, meta, brms, dmetar, extraDistr, ggplot2, tidybayes, dplyr, ggplot2, ggridges, glue, stringr, forcats, meta)
str(madata)
str(madata)
?metagen
i<-c("TE","seTE","data=","studlab=paste()","comb.fixed=","comb.random","prediction=","sm=")
i
load("~/githubs/metrics_discussion_work/meta_anal_and_open_science/Doing-Meta-Analysis-in-R-master/_data/Meta_Analysis_Data.RData")
load("meta_anal_and_open_science/Doing-Meta-Analysis-in-R-master/_data/Meta_Analysis_Data.RData")
pwd
getwd
getwd()
load("meta_anal_and_open_science/Doing-Meta-Analysis-in-R-master/_data/Meta_Analysis_Data.RData")
load("meta_anal_and_open_science/Doing-Meta-Analysis-in-R-master/_data/Meta_Analysis_Data.RData")
load(here("meta_anal_and_open_science","Doing-Meta-Analysis-in-R-master","_data","Meta_Analysis_Data.RData")
load(here("meta_anal_and_open_science","Doing-Meta-Analysis-in-R-master","_data","Meta_Analysis_Data.RData"))
load(here("meta_anal_and_open_science","Doing-Meta-Analysis-in-R-master","_data","Meta_Analysis_Data.RData"))
load(here("meta_anal_and_open_science", "Doing-Meta-Analysis-in-R-master", "_data", "Meta_Analysis_Data.RData"))
p_load(tidyverse, meta, brms, dmetar, extraDistr, ggplot2, tidybayes, dplyr, ggplot2, ggridges, glue, stringr, forcats, meta, here)
load(here("meta_anal_and_open_science", "Doing-Meta-Analysis-in-R-master", "_data", "Meta_Analysis_Data.RData"))
madata <- load(here("meta_anal_and_open_science", "Doing-Meta-Analysis-in-R-master", "_data", "Meta_Analysis_Data.RData"))
str(madata)
str(madata)
madata <- load(here("meta_anal_and_open_science", "Doing-Meta-Analysis-in-R-master", "_data", "Meta_Analysis_Data.RData"))
madata
madata <- Meta_Analysis_Data
str(madata)
(
m <- metagen(TE,
seTE,
data=madata,
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = FALSE,
prediction=TRUE,
sm="SMD")
)
(
m <- metagen(TE,
seTE,
data=madata,
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = TRUE,
prediction=TRUE,
sm="SMD")
)
(
m <- metagen(TE, #
seTE,
data=madata,
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = FALSE,
prediction=TRUE,
sm="SMD")
)
(
m <- madata %>%
metagen(TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.x,
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = FALSE,
prediction=TRUE,
sm="SMD")
)
(
m <- madata %>%
metagen(TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.X,
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = FALSE,
prediction=TRUE,
sm="SMD")
)
(
m <- madata %>%
metagen(TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = FALSE,
prediction=TRUE,
sm="SMD")
)
(
m <- madata %>%
metagen(
data=.,
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
studlab=paste(Author),
comb.fixed = TRUE,
comb.random = FALSE,
prediction=TRUE,
sm="SMD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="SMD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction = FALSE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="SMD")
)
TRUE
TRUE
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="SMD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="MD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="MD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="SMD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="MD")
)
(
m <- madata %>%
metagen(
TE, # the treatment effect variable
seTE, # the SE of treatment effect variable
data=.,
studlab=paste(Author), #labels for each study
comb.fixed = TRUE, #yes fixed effects estimation
comb.random = FALSE, #no RE estimation (we could do both)
prediction=TRUE, #"print a prediction interval for the effect of future studies based on present evidence"
sm="SMD")
)
p_load(tidyverse, meta, brms, dmetar, extraDistr, ggplot2, tidybayes, dplyr, ggplot2, ggridges, glue, stringr, forcats, meta, metafor, here)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = TRUE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = TRUE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = FALSE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
TRUE
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = FALSE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
TRUE
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = TRUE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman)
prediction = TRUE,
sm = "SMD")
)
(
m.hksj <- metagen(TE,
seTE,
data = madata,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ", #Sidik-Jonkman method
hakn = FALSE, #"use the Knapp-Hartung method" or 'adjustment'?; not sure why we this program has the extra line as the text refers to the Knapp-Hartung(-Sidik-Jonkman); I don't see a difference below from leaving this out
prediction = TRUE,
sm = "SMD")
)
library(RVAideMemoire)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mixOmics")
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
install.packages("brms")
try_download <- function(url, path) {
new_path <- gsub("[.]", "X.", path)
tryCatch({
download.file(url = url,
destfile = new_path)
}, error = function(e) {
print("You are not online, so we can't download")
})
tryCatch(
file.rename(new_path, path
)
}
library(here)
here <- here::here()
try_download("https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/project_setup.R", here::here("code","project_setup.R"))
source(here("code", "project_setup.R"))
install.packages("magick")
try_download <- function(url, path) {
new_path <- gsub("[.]", "X.", path)
tryCatch({
download.file(url = url,
destfile = new_path)
}, error = function(e) {
print("You are not online, so we can't download")
})
tryCatch(
file.rename(new_path, path
)
}
library(here)
here <- here::here()
try_download("https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/project_setup.R", here::here("code","project_setup.R"))
source(here("code", "project_setup.R"))
library(here)
source('~/git_projects/metrics_discussion/code/project_setup.R')
source(here::here("code", "project_setup.R"))
install.packages('BiocManager')
source(here::here("code", "project_setup.R"))
