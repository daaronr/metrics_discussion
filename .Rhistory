citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
tryCatch(
{
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/header.html", destfile = "support/header.html")
},  error = function(e) {
print("you are not online, so we can't download")
}
)
{source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/functions.R')
source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/baseoptions.R')
},  error = function(e) {
tryCatch(
{
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/header.html", destfile = "support/header.html")
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/tufte_plus.css", destfile = "support/tufte_plus.css")
},  error = function(e) {
print("you are not online, so we can't download")
}
)
tryCatch(
{source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/functions.R')
source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/baseoptions.R')
},  error = function(e) {
print("you are not online, so we source locally instead; hope you've updated")
source(here("code", "functions.R")) # functions grabbed from web and created by us for analysis/output
source(here("code", "baseoptions.R")) # Basic options used across files and shortcut functions, e.g., 'pp()' for print
}
)
tryCatch(
{source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/functions.R')
source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/baseoptions.R')
},  error = function(e) {
print("you are not online, so we source locally instead; hope you've updated")
source(here("code", "functions.R")) # functions grabbed from web and created by us for analysis/output
source(here("code", "baseoptions.R")) # Basic options used across files and shortcut functions, e.g., 'pp()' for print
}
)
source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/functions.R')
library(here)
library(here)
library(devtools)
tryCatch(
{source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/functions.R')
source_url('https://raw.githubusercontent.com/daaronr/dr-rstuff/master/functions/baseoptions.R')
},  error = function(e) {
print("you are not online, so we source locally instead; hope you've updated")
source(here("code", "functions.R")) # functions grabbed from web and created by us for analysis/output
source(here("code", "baseoptions.R")) # Basic options used across files and shortcut functions, e.g., 'pp()' for print
}
)
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/tufte_plus.css", destfile = here("support", "tufte_plus.css"))
tryCatch(
{
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/header.html", destfile = "support/header.html")
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/tufte_plus.css", destfile = here("support", "tufte_plus.css"))
},  error = function(e) {
print("you are not online, so we can't download")
}
)
library(here)
tryCatch(
{
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/header.html", destfile = here("support", "header.html"))
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/tufte_plus.css", destfile = here("support", "tufte_plus.css"))
download.file(url = "https://www.dropbox.com/s/24ndb3p9aa0tfv2/reinstein_references.bib?dl=0", destfile = "reinstein_references.bib")
},  error = function(e) {
print("you are not online, so we can't download")
}
)
citr:::insert_citation()
citr:::insert_citation()
library(here)
tryCatch(
{
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/header.html", destfile = here("support", "header.html"))
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/tufte_plus.css", destfile = here("support", "tufte_plus.css"))
download.file(url = "https://www.dropbox.com/s/24ndb3p9aa0tfv2/reinstein_references.bib?raw=1", destfile = "reinstein_references.bib")
},  error = function(e) {
print("you are not online, so we can't download")
}
)
library(here)
tryCatch(
{
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/header.html", destfile = here("support", "header.html"))
download.file(url = "https://raw.githubusercontent.com/daaronr/dr-rstuff/master/bookdown_template/support/tufte_plus.css", destfile = here("support", "tufte_plus.css"))
download.file(url = "https://www.dropbox.com/s/3i8bjrgo8u08v5w/reinstein_bibtex.bib?raw=1", destfile = "reinstein_references.bib")
},  error = function(e) {
print("you are not online, so we can't download")
}
)
library(meta)
devtools::install_github("MathiasHarrer/dmetar")
library(meta)
devtools::install_github("MathiasHarrer/dmetar")
library(meta)
#install.packages("brms")
library(brms)
install.packages("brms")
install.packages("brms")
library(brms)
install.packages("brms")
library(brms)
install.packages("colourpicker")
#install.packages("colourpicker")
#install.packages("brms")
library(brms)
#devtools::install_github("MathiasHarrer/dmetar")
library(meta)
#install.packages("colourpicker")
#install.packages("brms")
library(brms)
devtools::install_github("MathiasHarrer/dmetar")
source(here("code", "functions.R"))
source(here("code", "baseoptions.R"))
#install.packages("colourpicker")
#install.packages("brms")
library(brms)
#install.packages("colourpicker")
install.packages("brms")
library(brms)
uninstall(brms)
install.packages(c("arm", "backports", "bookdown", "boot", "broom", "callr", "car", "class", "cobalt", "covr", "crosstalk", "dbplyr", "DescTools", "devtools", "DT", "estimatr", "foreach", "fs", "furniture", "future", "GGally", "ggplot2", "ggrepel", "ggstance", "git2r", "gtools", "igraph", "insight", "janitor", "jtools", "KernSmooth", "labelled", "lattice", "lava", "lme4", "lubridate", "MASS", "matrixStats", "mnormt", "modelr", "nlme", "nloptr", "nnet", "pillar", "pkgbuild", "PKI", "plyr", "purrr", "pwr", "quantreg", "Rcpp", "RCurl", "recipes", "reshape2", "rex", "rlang", "robustbase", "roxygen2", "shiny", "sjlabelled", "skimr", "spatial", "survival", "tibble", "tinytex", "todor", "usethis", "withr", "xaringan", "xfun", "xml2", "zoo"))
install.packages(c("arm", "backports", "bookdown", "boot", "broom", "callr", "car", "class", "cobalt", "covr", "crosstalk", "dbplyr", "DescTools", "devtools", "DT", "estimatr", "foreach", "fs", "furniture", "future", "GGally", "ggplot2", "ggrepel", "ggstance", "git2r", "gtools", "igraph", "insight", "janitor", "jtools", "KernSmooth", "labelled", "lattice", "lava", "lme4", "lubridate", "MASS", "matrixStats", "mnormt", "modelr", "nlme", "nloptr", "nnet", "pillar", "pkgbuild", "PKI", "plyr", "purrr", "pwr", "quantreg", "Rcpp", "RCurl", "recipes", "reshape2", "rex", "rlang", "robustbase", "roxygen2", "shiny", "sjlabelled", "skimr", "spatial", "survival", "tibble", "tinytex", "todor", "usethis", "withr", "xaringan", "xfun", "xml2", "zoo"))
library(brms)
library("brms", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
remove.packages("brms")
detach("package:stats", unload=TRUE)
library("stats", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library("StanHeaders", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
remove.packages("StanHeaders")
library("rstan", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library("rstantools", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
remove.packages("rstan")
remove.packages("rstantools")
#install.packages("colourpicker")
install.packages("brms")
install.packages("brms")
library(brms)
library(brms)
remove.packages("brms")
if (!requireNamespace("remotes")) {
install.packages("remotes")
}
remotes::install_github("paul-buerkner/brms")
library(brms)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
library(brms)
install.packages("brms")
library(brms)
library(lobstr)
library(lobstr)
install.packages("library(lobstr)")
expr(mean(x, na.rm = TRUE))
library(rlang)
expr(mean(x, na.rm = TRUE))
expr(mean(x, na.rm = TRUE)) %>% str
expr(mean(x, na.rm = TRUE)) %>% str()
env_names(e1)
