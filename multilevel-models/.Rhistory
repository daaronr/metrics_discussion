setwd("C:/Users/gk249/Downloads/MLM workshop/Data and codes")
# To read .dta files in R
#install.packages("foreign")
library(foreign)
# Load the dataset
mydata<-read.dta("schools.dta")
mydata
# Characteristics of the variables included in the dataset
str(mydata)
#Take a look at the first 10 observations in the dataset
mydata[order(mydata$caseid),][1:10,]
# Number of students (level-1)
length(unique(mydata$caseid))
# Number of schools (level-2)
length(unique(mydata$schoolid))
# Number of students by school (range)
range(table(mydata$schoolid))
table(mydata$schoolid)
# Install and load "lme4" package to do multi-level analysis
#install.packages("arm")
library(arm)
# Install and load "lme4" package to do multi-level analysis
install.packages("arm")
# To read .dta files in R
install.packages("foreign")
library(foreign)
install.packages("foreign")
install.packages("foreign")
# Check out the variables included in the dataset
names(mydata)
table(mydata$schdenom)
table(mydata$sclass)
# Install and load "lme4" package to do multi-level analysis
install.packages("arm")
library(arm)
library(lmerTest)
library(lmerTest)
install.packages("arm")
library(lmerTest)
install.packages("arm")
# M.1: The most basic model
M.1<-lmer(score~(1|schoolid), data=mydata)
?arm
# Install and load "lme4" package to do multi-level analysis
install.packages("arm")
library(arm)
library(lmerTest)
arm
?arm
install.packages("arm")
library(lmerTest)
library(arm)
library(lmerTest)
library(arm::lmerTest)
# Install and load "lme4" package to do multi-level analysis
install.packages("arm")
library(arm)
install.packages(lmerTest)
install.packages("arm")
library(lmerTest)
install.packages("arm")
# M.1: The most basic model
M.1<-lmer(score~(1|schoolid), data=mydata) #this means 'let the intercept vary by schoolid'
install.packages(lmerTest)
library(lmerTest)
install.packages(lmerTest)
install.packages("lmerTest")
library(lmerTest)
# M.1: The most basic model
M.1<-lmer(score~(1|schoolid), data=mydata) #this means 'let the intercept vary by schoolid'
M.1
# M.1: The most basic model
M.1<-lmer(score~(1|schoolid), data=mydata) #this means 'let the intercept vary by schoolid'
summary(M.1)
ranef(M.1)
?lmer
# Obtain the fixed effects
fixef(M.1)
# List the random intercepts( random + fixed) effects of each school
coef(M.1)
# Random intercept for the first school
coef(M.1)[[1]][1,1]
str(M.1)
coef(M.1)
coef(M.1)$schoolid[1,1]
# Random intercept for the first school
coef(M.1)[[1]][1,1]
# Random effect for the first school
ranef(M.1)[[1]][1,1]
# Fixed effect + random effect for the first school
fixef(M.1)+ranef(M.1)[[1]][1,1]
# Random intercept for the second school
coef(M.1)[[1]][2,1]
str(coef(M.1))
# Random intercept for the second school
coef(M.1)[[1]][2,2]
# Random intercept for the second school
coef(M.1)[[1]][2,1]
## Plot the school random effects
plot(as.matrix(ranef(M.1)$schoolid),
xlab="School", ylab="", pch=20,
main=expression(nu[j]), cex.main=2.5, cex=1.5)
abline(h=0)
?abline
## Now recover the standard errors of the random effects
se.ranef(M.1)
## Now recover the standard errors of the random effects
se.ranef(M.1)
mtext(expression(delta), at=fixef(M.1), side=4, cex=2.5)
## Now recover the standard errors of the random effects
se.ranef(M.1)
??se.ranef
## Now recover the standard errors of the random effects
arm::se.ranef(M.1)
# Plot the school random effects, accounting for uncertainty
plot(as.matrix(ranef(M.1)$schoolid),
xlab="School", ylab="", pch=20, ylim=c(-30,30),
main=expression(hat(nu[j])), cex.main=2.5)
segments(1:508,
as.matrix(ranef(M.1)$schoolid+1.95*as.matrix(se.ranef(M.1)$schoolid)),
1:508,as.matrix(ranef(M.1)$schoolid-1.95*as.matrix(se.ranef(M.1)$schoolid)))
segments(1:508,
as.matrix(ranef(M.1)$schoolid+1.95*as.matrix(arm::se.ranef(M.1)$schoolid)),
1:508,as.matrix(ranef(M.1)$schoolid-1.95*as.matrix(se.ranef(M.1)$schoolid)))
segments(1:508,
as.matrix(ranef(M.1)$schoolid+1.95*as.matrix(arm::se.ranef(M.1)$schoolid)),
1:508,as.matrix(ranef(M.1)$schoolid-1.95*as.matrix(arm::se.ranef(M.1)$schoolid)))
abline(h=0, col="gray", lwd=2)
# Same plot, ordered according to the estimated random effects
df<-cbind(rownames(ranef(M.1)[[1]]), ranef(M.1)[[1]], se.ranef(M.1)[[1]])
# Same plot, ordered according to the estimated random effects
df<-cbind(rownames(ranef(M.1)[[1]]), ranef(M.1)[[1]], arm::se.ranef(M.1)[[1]])
colnames(df)<-c("schoolid", "Raneff", "Raneff.se")
df<-df[order(df$Raneff),]
df<-cbind(df,
c(1:dim(df)[[1]]))
colnames(df)[4]<-"rank"
df<-df[order(df$schoolid),]
plot(df$rank, df$Raneff, type="n", xlab="Schools (ranked)",
ylab="", xaxt='n', ylim=c(-30,30),
main=expression(hat(nu[j])), cex.main=2.5)
segments(df$rank, df$Raneff-1.96*df$Raneff.se,
df$rank, df$Raneff+1.96*df$Raneff.se)
axis(1, at=df$rank,labels=df$schoolid, tick=FALSE)
abline(h=0, col="gray", lwd=2)
# COMPARE THE MULTI-LEVEL AGAINST THE SINGLE-LEVEL model
# Fit a single-level model (command ``lm'')
M.0<-lm(score~1, data=mydata)
# Compare the fit of the two models
anova(M.1, M.0)
setwd("C:/Users/gk249/Downloads/MLM workshop/Data and codes")
library(arm)
library(lmerTest)
# To read .dta files in R
#install.packages("foreign")
library(foreign)
# Load the dataset
mydata<-read.dta("schools.dta")
# M.2: Model with level-1 explanatory variable
M.2<-lmer(score~female+(1|schoolid), data=mydata)
# M.2: Model with level-1 explanatory variable
M.2<-lmer(score~female+(1|schoolid), data=mydata)
summary(M.2)
fixef(M.2)
ranef(M.2)
coef(M.2)
fixef(M.2)
ranef(M.2)
coef(M.2)
# M.3: Model with level-1 explanatory variable & random slope
M.3<-lmer(score~female+(1+female|schoolid), data=mydata)
fixef(M.3)
ranef(M.3)
summary(M.3)
# Check
coef(M.3)[[1]][1,1]
ranef(M.3)[[1]][1,1]+fixef(M.3)[1]
coef(M.3)[[1]][1,2]
ranef(M.3)[[1]][1,2]+fixef(M.3)[2]
# M.3: Model with level-1 explanatory variable & random slope
M.3<-lmer(score~female+(1+female|schoolid), data=mydata)
summary(M.3)
summary(M.2)
# M.4: Model with level-1 and level-2 explanatory variables,
# random intercepts & random slope
M.4<-lmer(score~female+schtype+female:schtype+(1+female|schoolid), data=mydata)
# M.4: Model with level-1 and level-2 explanatory variables,
# random intercepts & random slope
M.4<-lmer(score~female+schtype+female:schtype+(1+female|schoolid), data=mydata)
summary(M.4)
ranef(M.4)
coef(M.4)
summary(M.4)
ranef(M.4)
ranef(M.4)
ranef(M.4)[1]
ranef(M.4)[1,1]
ranef(M.4)[[1]
]
# M.5: Non-nested multi-level model
M.5<-lmer(score~female+(1|schoolid)+(1|cohort90), data=mydata)
summary(M.5)
ranef(M.5)
